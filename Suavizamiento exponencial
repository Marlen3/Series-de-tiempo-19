require(fpp)
require(forecast)
require(ggplot2)


pib <- read.csv("C:/Users/ALUMNO-D23/Downloads/pib.csv")
pibt<-ts(pib, frequency=1, start=1961)
mod1<-ses(pibt, alpha=0.1, initial="simple", h=8)
mod2<-ses(pibt, alpha=0.3, initial="simple", h=8)
mod3<-ses(pibt, alpha=0.9, initial="simple", h=8)
plot(mod1, ylab="PIB", xlab="año", main="PIB", type="o")
lines(fitted(mod1),col="blue", type="o")
lines(fitted(mod2),col="red", type="o")
lines(fitted(mod3),col="green", type="o")
legend("topleft",lty=1,col=c(1,"blue","red","green"),
       c("data",expression(alpha==0.1),expression(alpha==0.3),
         expression(alpha==0.9),pch=1)
 
 
##con la funcion windows separen la serie del pib
## en datos de entrenamiento y datos de prueba (20%)
## y grafiquen los modelos solo en los que corresponde a
## los datos de prueba los valores ajustados de los tres modelos


pibw<- window(pibt, start=2005, end=2017 )
plot(pibw)
mod4<- ses(pibw, alpha=.1, initial = "simple", h=8)# suavizado exponencial simple
mod5<- ses(pibw, alpha=.3, initial = "simple", h=8)
mod6<- ses(pibw, alpha=.9, h=8)
plot(mod4, ylab = "PIB",
     xlab = "AÑO", main = "PIB", type = "o")
lines(fitted(mod4), col="brown", type="o")
lines(fitted(mod5), col="red", type="o")
lines(fitted(mod6), col="green", type="o")
legend ("topleft", lty = 1, col = c(1, "blue", "red", "green"),
        c("data",expression (alpha==0.1),expression (alpha==0.3),
          expression (alpha==0.9)),pch=1)
